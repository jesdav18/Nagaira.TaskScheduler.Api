name: .NET CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    # Paso 1: Checkout del código
    - uses: actions/checkout@v4

    # Paso 2: Configurar .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Paso 3: Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore

    # Paso 4: Construir el proyecto
    - name: Build
      run: dotnet build --no-restore

    # Paso 5: Ejecutar pruebas
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Paso 6: Publicar la aplicación
    - name: Publish
      run: dotnet publish -c Release -o out

    # Paso 7: Desplegar a tu VPS usando SSH
    - name: Deploy to VPS via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: 2222
        script: |
          # Agregar la clave pública del servidor al archivo known_hosts
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
    
          # Crear el directorio de despliegue temporal
          mkdir -p /tmp/deploy
          cp -r out/* /tmp/deploy/
    
          # Crear la carpeta de destino en el VPS
          mkdir -p ${{ secrets.VPS_API_PATH }}
    
          # Subir los archivos al VPS
          scp -P 2222 -r /tmp/deploy/* ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:${{ secrets.VPS_API_PATH }}
    
          # Reiniciar o iniciar el servicio en el VPS
          sudo systemctl restart api-task-scheduler.service
