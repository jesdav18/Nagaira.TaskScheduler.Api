name: .NET CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    # Paso 1: Checkout del código
    - uses: actions/checkout@v4

    # Paso 2: Configurar .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Paso 3: Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore

    # Paso 4: Construir el proyecto
    - name: Build
      run: dotnet build --no-restore

    # Paso 5: Ejecutar pruebas
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Paso 6: Publicar la aplicación
    - name: Publish
      run: |
        set -e
        dotnet publish -c Release -o out
            # Listar los archivos generados
            echo "Archivos publicados:"
            ls -l out
            if [ ! -d "out" ] || [ -z "$(ls -A out)" ]; then
              echo "Error: Publicación fallida. El directorio 'out/' está vacío."
              exit 1
            fi

    # Paso 7: Listar los archivos publicados
    - name: List Published Files
      run: ls -l out

    - name: Copy to Remote Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}  # Dirección IP del servidor
        ssh_port: 2222  # Puerto SSH (usualmente 22, pero tú usas 2222)
        ssh_username: ${{ secrets.VPS_USERNAME }}  # Nombre de usuario SSH
        ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}  # Clave SSH privada almacenada en los secretos
        ssh_passphrase: ${{ secrets.SSH_PASSPHRASE }}  # Passphrase de la clave, si aplica
        source_dir: out/  # Directorio local donde se encuentran los archivos generados
        destination_dir: ${{ secrets.VPS_API_PATH }}  # Ruta en el VPS donde se deben copiar los archivos
        rm: true  # Eliminar archivos después de copiarlos (opcional)

    - name: Restart service on VPS
      run: sudo systemctl restart api-task-scheduler.service

