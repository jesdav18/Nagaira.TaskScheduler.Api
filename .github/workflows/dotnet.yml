name: .NET CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    # Paso 1: Checkout del código
    - uses: actions/checkout@v4

    # Paso 2: Configurar .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Paso 3: Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore

    # Paso 4: Construir el proyecto
    - name: Build
      run: dotnet build --no-restore

    # Paso 5: Ejecutar pruebas
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Paso 6: Publicar la aplicación
    - name: Publish
      run: |
        set -e
        dotnet publish -c Release -o out
        echo "Archivos publicados:"
        ls -l out
        if [ ! -d "out" ] || [ -z "$(ls -A out)" ]; then
          echo "Error: Publicación fallida. El directorio 'out/' está vacío."
          exit 1
        fi

    - name: Backup existing files
      uses: appleboy/ssh-action@v1.2.0
      with:
       host: ${{ secrets.VPS_IP  }}
       username: ${{ secrets.VPS_USERNAME }}
       passphrase: ${{ secrets.SSH_PASSPHRASE }}
       key: ${{ secrets.SSH_PRIVATE_KEY }}
       port: 2222
       script: |
        BACKUP_DIR="/var/www/nagaira.com/apis/backups/task-scheduler/$(date +'%Y%m%d_%H%M%S')"
        TARGET_DIR="${{ secrets.VPS_API_PATH }}"
        echo "Creando directorio de backup en $BACKUP_DIR..."
        mkdir -p $BACKUP_DIR
        echo "Copiando archivos del target $TARGET_DIR a $BACKUP_DIR..."
        cp -r $TARGET_DIR/* $BACKUP_DIR/
        echo "Backup completado correctamente."

   
    # Paso 8: Desplegar a tu VPS usando SCP
    - name: Deploy to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: 2222
        source: "/home/runner/work/Nagaira.TaskScheduler.Api/Nagaira.TaskScheduler.Api/out/*"
        target: "/var/www/nagaira.com/apis/temporary/task-scheduler"
        overwrite: true
